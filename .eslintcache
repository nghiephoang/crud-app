[{"D:\\JVB\\CRUD\\crud-app\\src\\index.js":"1","D:\\JVB\\CRUD\\crud-app\\src\\reportWebVitals.js":"2","D:\\JVB\\CRUD\\crud-app\\src\\App.js":"3"},{"size":500,"mtime":1611106866108,"results":"4","hashOfConfig":"5"},{"size":362,"mtime":499162500000,"results":"6","hashOfConfig":"5"},{"size":7028,"mtime":1611141482382,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"uk4ou6",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15"},"D:\\JVB\\CRUD\\crud-app\\src\\index.js",[],["16","17"],"D:\\JVB\\CRUD\\crud-app\\src\\reportWebVitals.js",[],"D:\\JVB\\CRUD\\crud-app\\src\\App.js",["18","19","20","21","22","23","24","25","26","27","28","29","30","31"],"import logo from './logo.svg';\nimport './App.css';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nimport { Button, Form, Modal } from \"react-bootstrap\";\n\n// modal\nfunction MyVerticallyCenteredModal(props) {\n  const [name, setName] = useState('');\n  const [des, setDes] = useState('');\n  const [urlImage, setUrl] = useState('');\n  const [quantity, setQuantity] = useState(0);\n\n\n  const editItem = (data, index, newData) => {\n    for (var i = 0; i < data.length; i++) {\n      if (data[i].productID == index) {\n        data[i] = newData;\n      }\n    }\n    return data;\n  }\n\n  const onHandleSubmit = (e) => {\n    e.preventDefault();\n    console.log(\"name: \" + name);\n    if (props.action == 'editItem') {\n      var itemsDidUpdate = {\n        productID: props.itemModify.productID,\n        name: name && name,\n        des: des && des,\n        urlImage: urlImage && urlImage,\n        quantity: quantity && quantity\n      }\n      var newData = editItem(props.data, props.itemModify.productID, itemsDidUpdate);\n      props.setData(newData);\n      axios.post('/api/edit', itemsDidUpdate);\n    }\n    else {\n      const newProduct = {\n        productID: '',\n        name: name,\n        des: des,\n        urlImage: urlImage,\n        quantity: quantity\n      };\n      var products = [...props.data, newProduct];\n      props.setData(products);\n      axios.post('/api/insert', newProduct).then(res => {\n\n      })\n    }\n    props.onHide();\n  }\n  return (\n    <Modal\n      {...props}\n      size=\"lg\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n          Thêm mới sản phẩm\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Form onSubmit={onHandleSubmit}>\n          <Form.Group controlId=\"formBasicEmail\">\n            <Form.Label>Tên sản phẩm</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Tên sản phẩm\"\n              onChange={e => setName(e.target.value)}\n              defaultValue={props.itemModify && props.itemModify.name}\n              name='name'\n              required\n            />\n          </Form.Group>\n          <Form.Group controlId=\"formBasicPassword\">\n            <Form.Label>Miêu tả</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Miêu tả\"\n              onChange={(e) => setDes(e.target.value)}\n              defaultValue={props.itemModify && props.itemModify.des}\n              name='des'\n              required\n            />\n          </Form.Group>\n          <Form.Group controlId=\"formBasicPassword\">\n            <Form.Label>Số lượng</Form.Label>\n            <Form.Control\n              type=\"number\"\n              min={1}\n              placeholder=\"Số lượng\"\n              onChange={(e) => setQuantity(e.target.value)}\n              defaultValue={props.itemModify && props.itemModify.quantity}\n              name='quantity'\n              value={props.itemModify && props.itemModify.quantity}\n              required\n            />\n          </Form.Group>\n          <Form.Group controlId=\"formBasicPassword\">\n            <Form.Label>Đường dẫn ảnh</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Đường dẫn ảnh\"\n              onChange={(e) => setUrl(e.target.value)}\n              defaultValue={props.itemModify && props.itemModify.urlImage}\n              name='urlImage'\n              required\n            />\n          </Form.Group>\n          <Button variant=\"primary\" type=\"submit\">\n            {\n              props.action == 'editItem' ? 'Cập nhật' : 'Thêm mới'\n            }\n          </Button>\n        </Form>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button onClick={props.onHide}>Đóng</Button>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n// end modal\nfunction App() {\n  const [data, setData] = useState([]);\n  const [checkActive, setCheckActive] = useState('Home');\n  const [modalShow, setModalShow] = useState(false);\n  const [action, setAction] = useState('');\n  const [itemModify, setItemModify] = useState(null);\n\n  useEffect(() => {\n    // get all item in mysql\n    axios.get('/api/news').then(res => {\n      setData(res.data.news);\n    })\n    return () => {\n    }\n  }, [])\n  // funtion change active class\n  const handleClick = (name) => {\n    setCheckActive(name);\n  }\n\n  // function add new item\n  const addItem = () => {\n    setModalShow(true);\n    setAction(\"addItem\");\n    setItemModify(null);\n  }\n  // function edit item\n  const editItem = (item) => {\n    setModalShow(true);\n    setAction(\"editItem\");\n    setItemModify(item);\n\n  }\n  // funtion get data from modal\n  const setDataProduct = (data) => {\n    setData(data);\n  }\n  // function delete item\n  const deleteItem = (productID) => {\n    var confirm = window.confirm('Bạn có muốn xóa sản phẩm này không?');\n    if (confirm == true) {\n      // delete item in UI \n      var newItems = data.filter(item => item.productID != productID);\n      setData(newItems);\n      // delete item in mysql\n      axios.post('/api/delete', { productID });\n    }\n  }\n  return (\n    <div className=\"App\">\n\n      <ul>\n        <li onClick={() => handleClick(\"Home\")} className={checkActive == \"Home\" ? 'active' : ''}><a>Home</a></li>\n        <li onClick={() => handleClick(\"Product\")} className={checkActive == \"Product\" ? 'active' : ''}><a>Product</a></li>\n        <li onClick={() => handleClick(\"Order\")} className={checkActive == \"Order\" ? 'active' : ''}><a>Order</a></li>\n        <li onClick={() => handleClick(\"Account\")} className={checkActive == \"Account\" ? 'active' : ''}><a>Account</a></li>\n      </ul>\n      <div className=\"tableContent\">\n        <Button onClick={addItem}>Thêm mới</Button>\n        <table>\n          <thead>\n            <tr>\n              <th>STT</th>\n              <th>Name</th>\n              <th>Des</th>\n              <th>urlImage</th>\n              <th>Quantity</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            {\n              data.map((val, index) => (\n\n                <tr key={index}>\n                  <td>{index}</td>\n                  <td>{val.name}</td>\n                  <td>{val.des}</td>\n                  <td>{val.urlImage}</td>\n                  <td>{val.quantity}</td>\n                  <th>\n                    <Button onClick={() => editItem(val)} variant='outline-primary'>Edit</Button>\n                    <Button onClick={() => deleteItem(val.productID)} variant='outline-danger'>Delete</Button>\n                  </th>\n                </tr>\n              ))\n            }\n          </tbody>\n        </table>\n      </div>\n      <MyVerticallyCenteredModal\n        show={modalShow}\n        onHide={() => setModalShow(false)}\n        data={data}\n        setData={(data) => setDataProduct(data)}\n        action={action}\n        itemModify={itemModify}\n      />\n    </div >\n  );\n}\n\nexport default App;\n",{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","severity":1,"message":"37","line":1,"column":8,"nodeType":"38","messageId":"39","endLine":1,"endColumn":12},{"ruleId":"40","severity":1,"message":"41","line":18,"column":29,"nodeType":"42","messageId":"43","endLine":18,"endColumn":31},{"ruleId":"40","severity":1,"message":"41","line":28,"column":22,"nodeType":"42","messageId":"43","endLine":28,"endColumn":24},{"ruleId":"40","severity":1,"message":"41","line":118,"column":28,"nodeType":"42","messageId":"43","endLine":118,"endColumn":30},{"ruleId":"40","severity":1,"message":"41","line":170,"column":17,"nodeType":"42","messageId":"43","endLine":170,"endColumn":19},{"ruleId":"40","severity":1,"message":"44","line":172,"column":57,"nodeType":"42","messageId":"43","endLine":172,"endColumn":59},{"ruleId":"40","severity":1,"message":"41","line":182,"column":72,"nodeType":"42","messageId":"43","endLine":182,"endColumn":74},{"ruleId":"45","severity":1,"message":"46","line":182,"column":99,"nodeType":"47","endLine":182,"endColumn":102},{"ruleId":"40","severity":1,"message":"41","line":183,"column":75,"nodeType":"42","messageId":"43","endLine":183,"endColumn":77},{"ruleId":"45","severity":1,"message":"46","line":183,"column":105,"nodeType":"47","endLine":183,"endColumn":108},{"ruleId":"40","severity":1,"message":"41","line":184,"column":73,"nodeType":"42","messageId":"43","endLine":184,"endColumn":75},{"ruleId":"45","severity":1,"message":"46","line":184,"column":101,"nodeType":"47","endLine":184,"endColumn":104},{"ruleId":"40","severity":1,"message":"41","line":185,"column":75,"nodeType":"42","messageId":"43","endLine":185,"endColumn":77},{"ruleId":"45","severity":1,"message":"46","line":185,"column":105,"nodeType":"47","endLine":185,"endColumn":108},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]